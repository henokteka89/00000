 
BEGIN
    SET NOCOUNT ON;

    -- Temporary table to store ClientIDs for batch processing
    CREATE TABLE #DynamicClientIDs (
        ClientID INT PRIMARY KEY
    );

    -- Populate the temporary table with the dynamic ClientIDs
    INSERT INTO #DynamicClientIDs (ClientID)
    SELECT ClientID 
    FROM fn_DCG_GetClientIDsForDynamicClientID(@DynamicClientID);

    -- Declare variables for tracking ClientAvail for each random section (1 to 10)
    DECLARE @ClientSection1Avail INT, @ClientSection2Avail INT, @ClientSection3Avail INT;
    DECLARE @ClientSection4Avail INT, @ClientSection5Avail INT, @ClientSection6Avail INT;
    DECLARE @ClientSection7Avail INT, @ClientSection8Avail INT, @ClientSection9Avail INT;
    DECLARE @ClientSection10Avail INT;

    -- Initialize the variables to 0 (no access by default)
    SET @ClientSection1Avail = 0; SET @ClientSection2Avail = 0; SET @ClientSection3Avail = 0;
    SET @ClientSection4Avail = 0; SET @ClientSection5Avail = 0; SET @ClientSection6Avail = 0;
    SET @ClientSection7Avail = 0; SET @ClientSection8Avail = 0; SET @ClientSection9Avail = 0;
    SET @ClientSection10Avail = 0;

    -- Variables for batch processing
    DECLARE @BatchSize INT = 500;
    DECLARE @MinID INT, @MaxID INT;

    -- Get the range for processing in batches
    SELECT @MinID = MIN(ClientID), @MaxID = MAX(ClientID) FROM #DynamicClientIDs;

    -- Process in batches
    WHILE @MinID IS NOT NULL AND @MinID <= @MaxID
    BEGIN
        -- Get the next batch of ClientIDs
        DECLARE @BatchTable TABLE (ClientID INT PRIMARY KEY);

        INSERT INTO @BatchTable (ClientID)
        SELECT TOP (@BatchSize) ClientID
        FROM #DynamicClientIDs
        WHERE ClientID >= @MinID
        ORDER BY ClientID;

        -- Update `ClientAvail` for each Random Section (1 to 10) based on the current batch of `ClientIDs`
        DECLARE @CurrentClientID INT;
        
        DECLARE Batch_Cursor CURSOR FOR SELECT ClientID FROM @BatchTable;
        OPEN Batch_Cursor;
        FETCH NEXT FROM Batch_Cursor INTO @CurrentClientID;

        WHILE @@FETCH_STATUS = 0
        BEGIN
            -- Random Section 1
            EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @CurrentClientID, 1, @AvailLoop OUTPUT;
            IF @AvailLoop = 1 SET @ClientSection1Avail = 1;

            -- Random Section 2
            EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @CurrentClientID, 2, @AvailLoop OUTPUT;
            IF @AvailLoop = 1 SET @ClientSection2Avail = 1;

            -- Random Section 3
            EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @CurrentClientID, 3, @AvailLoop OUTPUT;
            IF @AvailLoop = 1 SET @ClientSection3Avail = 1;

            -- Continue for other Random Sections up to 10...

            -- Fetch the next ClientID from the batch
            FETCH NEXT FROM Batch_Cursor INTO @CurrentClientID;
        END;

        CLOSE Batch_Cursor;
        DEALLOCATE Batch_Cursor;

        -- Update `@MinID` to move to the next batch
        SET @MinID = (SELECT MIN(ClientID) FROM #DynamicClientIDs WHERE ClientID > @MinID + @BatchSize);
    END;

    -- Step 3: Return the `ClientAvail` information for each Random Section
    SELECT 
        1 AS RandomSectionID, CAST(@ClientSection1Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        2 AS RandomSectionID, CAST(@ClientSection2Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        3 AS RandomSectionID, CAST(@ClientSection3Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        4 AS RandomSectionID, CAST(@ClientSection4Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        5 AS RandomSectionID, CAST(@ClientSection5Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        6 AS RandomSectionID, CAST(@ClientSection6Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        7 AS RandomSectionID, CAST(@ClientSection7Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        8 AS RandomSectionID, CAST(@ClientSection8Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        9 AS RandomSectionID, CAST(@ClientSection9Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        10 AS RandomSectionID, CAST(@ClientSection10Avail AS BIT) AS ClientAvail
    ORDER BY RandomSectionID;

    -- Drop temporary table
    DROP TABLE #DynamicClientIDs;
END;


















--good 
BEGIN
    SET NOCOUNT ON;

    DECLARE @DCC_ClientID INT;
    DECLARE @AvailLoop INT;

    -- Declare variables to hold ClientAvail information for each Random Section (1 to 10)
    DECLARE @ClientSection1Avail INT, @ClientSection2Avail INT, @ClientSection3Avail INT;
    DECLARE @ClientSection4Avail INT, @ClientSection5Avail INT, @ClientSection6Avail INT;
    DECLARE @ClientSection7Avail INT, @ClientSection8Avail INT, @ClientSection9Avail INT;
    DECLARE @ClientSection10Avail INT;

    -- Initialize the variables to 0 (no access by default)
    SET @ClientSection1Avail = 0; SET @ClientSection2Avail = 0; SET @ClientSection3Avail = 0;
    SET @ClientSection4Avail = 0; SET @ClientSection5Avail = 0; SET @ClientSection6Avail = 0;
    SET @ClientSection7Avail = 0; SET @ClientSection8Avail = 0; SET @ClientSection9Avail = 0;
    SET @ClientSection10Avail = 0;

    -- Step 1: Define a Cursor to Iterate Over All Dynamic Client IDs
    DECLARE Client_Cursor CURSOR FOR
    SELECT ClientID 
    FROM fn_DCG_GetClientIDsForDynamicClientID(@DynamicClientID);

    OPEN Client_Cursor;

    FETCH NEXT FROM Client_Cursor INTO @DCC_ClientID;

    -- Step 2: Iterate Over Each ClientID and Determine `ClientAvail` for Random Sections 1 to 10
    WHILE @@FETCH_STATUS = 0
    BEGIN
        -- Random Section 1
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 1, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection1Avail = 1;

        -- Random Section 2
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 2, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection2Avail = 1;

        -- Random Section 3
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 3, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection3Avail = 1;

        -- Random Section 4
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 4, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection4Avail = 1;

        -- Random Section 5
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 5, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection5Avail = 1;

        -- Random Section 6
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 6, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection6Avail = 1;

        -- Random Section 7
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 7, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection7Avail = 1;

        -- Random Section 8
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 8, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection8Avail = 1;

        -- Random Section 9
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 9, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection9Avail = 1;

        -- Random Section 10
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 10, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection10Avail = 1;

        FETCH NEXT FROM Client_Cursor INTO @DCC_ClientID;
    END;

    CLOSE Client_Cursor;
    DEALLOCATE Client_Cursor;

    -- Step 3: Return the `ClientAvail` Information for Each Random Section
    SELECT 
        1 AS RandomSectionID, CAST(@ClientSection1Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        2 AS RandomSectionID, CAST(@ClientSection2Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        3 AS RandomSectionID, CAST(@ClientSection3Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        4 AS RandomSectionID, CAST(@ClientSection4Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        5 AS RandomSectionID, CAST(@ClientSection5Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        6 AS RandomSectionID, CAST(@ClientSection6Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        7 AS RandomSectionID, CAST(@ClientSection7Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        8 AS RandomSectionID, CAST(@ClientSection8Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        9 AS RandomSectionID, CAST(@ClientSection9Avail AS BIT) AS ClientAvail
    UNION ALL
    SELECT 
        10 AS RandomSectionID, CAST(@ClientSection10Avail AS BIT) AS ClientAvail
    ORDER BY RandomSectionID;
END;





















DECLARE @AvailLoop INT;

DECLARE @UserSection1Avail INT; DECLARE @UserSection2Avail INT; DECLARE @UserSection3Avail INT;
DECLARE @UserSection4Avail INT; DECLARE @UserSection5Avail INT; DECLARE @UserSection6Avail INT;
DECLARE @UserSection7Avail INT; DECLARE @UserSection8Avail INT; DECLARE @UserSection9Avail INT;
DECLARE @UserSection10Avail INT;

DECLARE @UserSection1XML VARCHAR(1000); DECLARE @UserSection2XML VARCHAR(1000); DECLARE @UserSection3XML VARCHAR(1000);
DECLARE @UserSection4XML VARCHAR(1000); DECLARE @UserSection5XML VARCHAR(1000); DECLARE @UserSection6XML VARCHAR(1000);
DECLARE @UserSection7XML VARCHAR(1000); DECLARE @UserSection8XML VARCHAR(1000); DECLARE @UserSection9XML VARCHAR(1000);
DECLARE @UserSection10XML VARCHAR(1000);

DECLARE @ClientSection1Avail INT; DECLARE @ClientSection2Avail INT; DECLARE @ClientSection3Avail INT;
DECLARE @ClientSection4Avail INT; DECLARE @ClientSection5Avail INT; DECLARE @ClientSection6Avail INT;
DECLARE @ClientSection7Avail INT; DECLARE @ClientSection8Avail INT; DECLARE @ClientSection9Avail INT;
DECLARE @ClientSection10Avail INT;

SET @UserSection1Avail = 0; SET @UserSection2Avail = 0; SET @UserSection3Avail = 0;
SET @UserSection4Avail = 0; SET @UserSection5Avail = 0; SET @UserSection6Avail = 0;
SET @UserSection7Avail = 0; SET @UserSection8Avail = 0; SET @UserSection9Avail = 0;
SET @UserSection10Avail = 0;

SET @ClientSection1Avail = 0; SET @ClientSection2Avail = 0; SET @ClientSection3Avail = 0;
SET @ClientSection4Avail = 0; SET @ClientSection5Avail = 0; SET @ClientSection6Avail = 0;
SET @ClientSection7Avail = 0; SET @ClientSection8Avail = 0; SET @ClientSection9Avail = 0;
SET @ClientSection10Avail = 0;

-- Process in batches of 500
DECLARE @BatchStart INT = 0;
DECLARE @BatchSize INT = 500;
DECLARE @TotalClients INT;

-- Get the total count of clients
SELECT @TotalClients = COUNT(*)
FROM fn_DCG_GetClientIDsForDynamicClientID(@DynamicClientID);

WHILE @BatchStart < @TotalClients
BEGIN
    -- Process the batch
    WITH ClientBatch AS (
        SELECT ClientID, ROW_NUMBER() OVER (ORDER BY ClientID) AS RowNum
        FROM fn_DCG_GetClientIDsForDynamicClientID(@DynamicClientID)
    )
    SELECT ClientID
    INTO #BatchClients
    FROM ClientBatch
    WHERE RowNum > @BatchStart AND RowNum <= @BatchStart + @BatchSize;

    DECLARE @DCC_ClientID INT;

    -- Loop through the batch
    DECLARE Batch_Cursor CURSOR FOR
    SELECT ClientID FROM #BatchClients;

    OPEN Batch_Cursor;
    FETCH NEXT FROM Batch_Cursor INTO @DCC_ClientID;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        EXEC web_Intranet_MyeMgmt_UserRandomSectionAvail @DCC_ClientID, @UserID, 1, @AvailLoop OUTPUT, @UserSection1XML OUTPUT;

        -- If we FIND any on, then we are a go...
        IF @AvailLoop = 1
        BEGIN
            SET @UserSection1Avail = 1;
        END

        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 1, @AvailLoop OUTPUT;

        -- If we FIND any on, then we are a go...
        IF @AvailLoop = 1
        BEGIN
            SET @ClientSection1Avail = 1;
        END

        -- Repeat for sections 2 to 10
        EXEC web_Intranet_MyeMgmt_UserRandomSectionAvail @DCC_ClientID, @UserID, 2, @AvailLoop OUTPUT, @UserSection2XML OUTPUT;
        IF @AvailLoop = 1 SET @UserSection2Avail = 1;
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 2, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection2Avail = 1;

        EXEC web_Intranet_MyeMgmt_UserRandomSectionAvail @DCC_ClientID, @UserID, 3, @AvailLoop OUTPUT, @UserSection3XML OUTPUT;
        IF @AvailLoop = 1 SET @UserSection3Avail = 1;
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 3, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection3Avail = 1;

        EXEC web_Intranet_MyeMgmt_UserRandomSectionAvail @DCC_ClientID, @UserID, 4, @AvailLoop OUTPUT, @UserSection4XML OUTPUT;
        IF @AvailLoop = 1 SET @UserSection4Avail = 1;
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 4, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection4Avail = 1;

        EXEC web_Intranet_MyeMgmt_UserRandomSectionAvail @DCC_ClientID, @UserID, 5, @AvailLoop OUTPUT, @UserSection5XML OUTPUT;
        IF @AvailLoop = 1 SET @UserSection5Avail = 1;
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 5, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection5Avail = 1;

        EXEC web_Intranet_MyeMgmt_UserRandomSectionAvail @DCC_ClientID, @UserID, 6, @AvailLoop OUTPUT, @UserSection6XML OUTPUT;
        IF @AvailLoop = 1 SET @UserSection6Avail = 1;
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 6, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection6Avail = 1;

        EXEC web_Intranet_MyeMgmt_UserRandomSectionAvail @DCC_ClientID, @UserID, 7, @AvailLoop OUTPUT, @UserSection7XML OUTPUT;
        IF @AvailLoop = 1 SET @UserSection7Avail = 1;
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 7, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection7Avail = 1;

        EXEC web_Intranet_MyeMgmt_UserRandomSectionAvail @DCC_ClientID, @UserID, 8, @AvailLoop OUTPUT, @UserSection8XML OUTPUT;
        IF @AvailLoop = 1 SET @UserSection8Avail = 1;
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 8, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection8Avail = 1;

        EXEC web_Intranet_MyeMgmt_UserRandomSectionAvail @DCC_ClientID, @UserID, 9, @AvailLoop OUTPUT, @UserSection9XML OUTPUT;
        IF @AvailLoop = 1 SET @UserSection9Avail = 1;
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 9, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection9Avail = 1;

        EXEC web_Intranet_MyeMgmt_UserRandomSectionAvail @DCC_ClientID, @UserID, 10, @AvailLoop OUTPUT, @UserSection10XML OUTPUT;
        IF @AvailLoop = 1 SET @UserSection10Avail = 1;
        EXEC web_Intranet_MyeMgmt_ClientRandomSectionAvail @DCC_ClientID, 10, @AvailLoop OUTPUT;
        IF @AvailLoop = 1 SET @ClientSection10Avail = 1;

        FETCH NEXT FROM Batch_Cursor INTO @DCC_ClientID;
    END;

    CLOSE Batch_Cursor;
    DEALLOCATE Batch_Cursor;

    DROP TABLE #BatchClients;

    SET @BatchStart = @BatchStart + @BatchSize;
END;

-- Get the goods...
SELECT 
    CAST
