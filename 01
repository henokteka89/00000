 
BEGIN
    SET NOCOUNT ON;

    -- Temporary Table for SecurityXML
    CREATE TABLE #SecurityXML (
        RandomSectionID INT PRIMARY KEY,
        SecurityXML VARCHAR(1000)
    );

    -- Retrieve Random Sections (IDs 1 to 10)
    SELECT RandomSectionID
    INTO #RandomSections
    FROM randomsection
    WHERE RandomSectionID BETWEEN 1 AND 10;

    -- Retrieve ClientIDs related to the DynamicClientID
    SELECT ClientID
    INTO #ClientIDs
    FROM fn_DCG_GetClientIDsForDynamicClientID(@DynamicClientID);

    -- Process Each RandomSectionID
    DECLARE @SectionID INT;
    DECLARE SectionCursor CURSOR LOCAL FAST_FORWARD FOR
    SELECT RandomSectionID FROM #RandomSections;

    OPEN SectionCursor;
    FETCH NEXT FROM SectionCursor INTO @SectionID;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        DECLARE @UserSecurityXML VARCHAR(1000) = NULL;
        DECLARE @ClientSecurityXML VARCHAR(1000) = NULL;

        -- Step 1: Retrieve User-Specific SecurityXML
        SELECT TOP 1 @UserSecurityXML = uss.SecurityXML
        FROM myescreenrandomusersectionsettings uss
        WHERE uss.UserID = @UserID AND uss.RandomSectionID = @SectionID;

        -- Step 2: Retrieve Client-Specific SecurityXML for All Clients
        WITH ClientSecurity AS (
            SELECT DISTINCT
                css.SecurityXML
            FROM #ClientIDs c
            CROSS APPLY (
                SELECT TOP 1 css.SecurityXML
                FROM myescreenrandomclientsectionsettings css
                WHERE css.ClientID = c.ClientID
                AND css.RandomSectionID = @SectionID
                ORDER BY css.ClientTypeID DESC
            ) css
        )
        SELECT TOP 1 @ClientSecurityXML = SecurityXML
        FROM ClientSecurity;

        -- Step 3: Insert Final SecurityXML for the Section
        INSERT INTO #SecurityXML (RandomSectionID, SecurityXML)
        SELECT 
            @SectionID, 
            COALESCE(@UserSecurityXML, @ClientSecurityXML)
        WHERE NOT EXISTS (
            SELECT 1 FROM #SecurityXML WHERE RandomSectionID = @SectionID
        );

        FETCH NEXT FROM SectionCursor INTO @SectionID;
    END

    CLOSE SectionCursor;
    DEALLOCATE SectionCursor;

    -- Final Output
    SELECT rs.RandomSectionID, sx.SecurityXML
    FROM #RandomSections rs
    LEFT JOIN #SecurityXML sx ON rs.RandomSectionID = sx.RandomSectionID
    ORDER BY rs.RandomSectionID;

    -- Cleanup
    DROP TABLE #RandomSections;
    DROP TABLE #ClientIDs;
    DROP TABLE #SecurityXML;
END;
GO
