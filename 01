WITH RandomSections AS (
    SELECT RandomSectionID
    FROM randomsection
    WHERE RandomSectionID BETWEEN 1 AND 10
),
ClientIDs AS (
    SELECT ClientID
    FROM fn_DCG_GetClientIDsForDynamicClientID(@DynamicClientID)
),
ClientHierarchy AS (
    SELECT 
        ca.ClientID,
        ca.ClientAccount,
        ca.ClientSubAccount,
        CASE 
            WHEN ca.ClientSubAccount <> 0 THEN 0 -- Subclient
            WHEN EXISTS (SELECT 1 FROM nationalaccountextras WHERE groupid = ca.ClientID) THEN 2 -- Group
            ELSE 1 -- Master
        END AS ClientTypeID,
        COALESCE(na.GroupID, 0) AS GroupID,
        COALESCE(m.ClientID, 0) AS MasterID
    FROM clientaccounts ca
    INNER JOIN ClientIDs c ON ca.ClientID = c.ClientID -- Process only relevant ClientIDs
    LEFT JOIN nationalaccountextras na ON na.ClientID = ca.ClientID
    LEFT JOIN clientaccounts m ON ca.ClientAccount = m.ClientAccount AND m.ClientSubAccount = 0
),
UserSecurity AS (
    SELECT 
        rs.RandomSectionID,
        CASE
            WHEN uss.accessflag = 1 THEN uss.SecurityXML
            ELSE NULL
        END AS UserSecurityXML,
        1 AS Priority -- Highest priority: User-level access
    FROM RandomSections rs
    LEFT JOIN myescreenrandomusersectionsettings uss
        ON rs.RandomSectionID = uss.RandomSectionID
        AND uss.UserID = @UserID
),
ClientSecurity AS (
    SELECT 
        rs.RandomSectionID,
        CASE
            WHEN css.accessflag = 1 THEN css.SECURITYXML
            ELSE NULL
        END AS ClientSecurityXML,
        CASE 
            WHEN css.ClientID = ch.ClientID AND css.ClientTypeID = 0 THEN 1 -- Client
            WHEN css.ClientID = ch.MasterID AND css.ClientTypeID = 0 THEN 2 -- Master
            WHEN css.ClientID = ch.GroupID AND css.ClientTypeID = 2 THEN 3 -- Group
            ELSE 4 -- Default
        END AS Priority
    FROM RandomSections rs
    CROSS APPLY ClientHierarchy ch
    LEFT JOIN myescreenrandomclientsectionsettings css
        ON rs.RandomSectionID = css.RandomSectionID
        AND (
            (css.ClientID = ch.ClientID AND css.ClientTypeID = 0) OR
            (css.ClientID = ch.MasterID AND css.ClientTypeID = 0) OR
            (css.ClientID = ch.GroupID AND css.ClientTypeID = 2)
        )
),
CombinedSecurity AS (
    SELECT
        RandomSectionID,
        COALESCE(MAX(CASE WHEN Priority = 1 THEN UserSecurityXML END), -- User-level XML
                 MAX(CASE WHEN Priority > 1 THEN ClientSecurityXML END)) AS FinalSecurityXML -- Client-level XML
    FROM (
        SELECT RandomSectionID, UserSecurityXML, Priority FROM UserSecurity
        UNION ALL
        SELECT RandomSectionID, ClientSecurityXML, Priority FROM ClientSecurity
    ) Combined
    GROUP BY RandomSectionID
)
-- Final Output
SELECT
    rs.RandomSectionID,
    cs.FinalSecurityXML,
    rs.menutext,
    rs.menuactionv2,
    rs.description
FROM RandomSections rs
LEFT JOIN CombinedSecurity cs ON rs.RandomSectionID = cs.RandomSectionID
ORDER BY rs.RandomSectionID;
