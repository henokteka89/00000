 
BEGIN
    SET NOCOUNT ON;

    -- Temporary table to store results
    CREATE TABLE #SecurityXMLResult (
        RandomSectionID INT PRIMARY KEY,
        SecurityXML VARCHAR(1000) NULL
    );

    -- Temporary table for client IDs
    CREATE TABLE #ClientIDs (
        ClientID INT PRIMARY KEY
    );

    -- Populate ClientIDs from the function
    INSERT INTO #ClientIDs (ClientID)
    SELECT ClientID 
    FROM fn_DCG_GetClientIDsForDynamicClientID(@DynamicClientID);

    -- Iterate over RandomSectionID (1 to 10)
    DECLARE @RandomSectionID INT = 1;

    WHILE @RandomSectionID <= 10
    BEGIN
        DECLARE @UserSectionAvail INT = NULL;
        DECLARE @UserSecurityXML VARCHAR(1000) = NULL;
        DECLARE @ClientSecurityXML VARCHAR(1000) = NULL;
        DECLARE @FinalSecurityXML VARCHAR(1000) = NULL;

        -- Step 1: Check User-Level Settings
        SELECT 
            @UserSectionAvail = accessflag,
            @UserSecurityXML = SecurityXML
        FROM myescreenrandomusersectionsettings WITH (NOLOCK)
        WHERE UserID = @UserID AND RandomSectionID = @RandomSectionID;

        IF @UserSectionAvail = 0
        BEGIN
            SET @FinalSecurityXML = @UserSecurityXML;
        END

        IF @UserSecurityXML IS NOT NULL AND @FinalSecurityXML IS NULL
        BEGIN
            SET @FinalSecurityXML = @UserSecurityXML;
        END

        -- Step 2: Check Client-Level Settings for All Related ClientIDs
        IF @FinalSecurityXML IS NULL
        BEGIN
            DECLARE ClientCursor CURSOR LOCAL FAST_FORWARD FOR
            SELECT ClientID FROM #ClientIDs;

            DECLARE @ClientID INT;
            DECLARE @ClientAccount INT;
            DECLARE @ClientSubaccount INT;
            DECLARE @ClientTypeID INT;
            DECLARE @MasterID INT;
            DECLARE @GroupID INT;

            OPEN ClientCursor;
            FETCH NEXT FROM ClientCursor INTO @ClientID;

            WHILE @@FETCH_STATUS = 0
            BEGIN
                -- Get Client Account Information
                SELECT 
                    @ClientAccount = ClientAccount, 
                    @ClientSubaccount = ClientSubAccount
                FROM clientaccounts WITH (NOLOCK)
                WHERE ClientID = @ClientID;

                SELECT @GroupID = GroupID
                FROM nationalaccountextras WITH (NOLOCK)
                WHERE ClientID = @ClientID;

                -- Determine ClientTypeID
                IF @ClientSubaccount <> 0
                BEGIN
                    SET @ClientTypeID = 0; -- Subclient
                    SELECT @MasterID = ClientID
                    FROM clientaccounts WITH (NOLOCK)
                    WHERE ClientAccount = @ClientAccount AND ClientSubAccount = 0;
                END
                ELSE
                BEGIN
                    IF EXISTS (SELECT 1 FROM nationalaccountextras WHERE GroupID = @ClientID)
                    BEGIN
                        SET @ClientTypeID = 2; -- Group
                    END
                    ELSE
                    BEGIN
                        SET @ClientTypeID = 1; -- Master
                    END
                END

                -- Check Client Settings Based on ClientTypeID
                IF @ClientTypeID = 2
                BEGIN
                    SELECT TOP 1 @ClientSecurityXML = SECURITYXML
                    FROM myescreenrandomclientsectionsettings WITH (NOLOCK)
                    WHERE ClientID = @ClientID AND ClientTypeID = 2 AND RandomSectionID = @RandomSectionID;

                    IF @ClientSecurityXML IS NOT NULL
                        SET @FinalSecurityXML = @ClientSecurityXML;
                END
                ELSE IF @ClientTypeID = 1
                BEGIN
                    SELECT TOP 1 @ClientSecurityXML = SECURITYXML
                    FROM myescreenrandomclientsectionsettings WITH (NOLOCK)
                    WHERE ClientID = @ClientID AND ClientTypeID = 1 AND RandomSectionID = @RandomSectionID;

                    IF @ClientSecurityXML IS NOT NULL
                        SET @FinalSecurityXML = @ClientSecurityXML;

                    IF @GroupID IS NOT NULL AND @FinalSecurityXML IS NULL
                    BEGIN
                        SELECT TOP 1 @ClientSecurityXML = SECURITYXML
                        FROM myescreenrandomclientsectionsettings WITH (NOLOCK)
                        WHERE ClientID = @GroupID AND ClientTypeID = 1 AND RandomSectionID = @RandomSectionID;

                        IF @ClientSecurityXML IS NOT NULL
                            SET @FinalSecurityXML = @ClientSecurityXML;
                    END
                END
                ELSE IF @ClientTypeID = 0
                BEGIN
                    SELECT TOP 1 @ClientSecurityXML = SECURITYXML
                    FROM myescreenrandomclientsectionsettings WITH (NOLOCK)
                    WHERE ClientID = @ClientID AND ClientTypeID = 0 AND RandomSectionID = @RandomSectionID;

                    IF @ClientSecurityXML IS NOT NULL
                        SET @FinalSecurityXML = @ClientSecurityXML;

                    IF @MasterID IS NOT NULL AND @FinalSecurityXML IS NULL
                    BEGIN
                        SELECT TOP 1 @ClientSecurityXML = SECURITYXML
                        FROM myescreenrandomclientsectionsettings WITH (NOLOCK)
                        WHERE ClientID = @MasterID AND ClientTypeID = 0 AND RandomSectionID = @RandomSectionID;

                        IF @ClientSecurityXML IS NOT NULL
                            SET @FinalSecurityXML = @ClientSecurityXML;
                    END

                    IF @GroupID IS NOT NULL AND @FinalSecurityXML IS NULL
                    BEGIN
                        SELECT TOP 1 @ClientSecurityXML = SECURITYXML
                        FROM myescreenrandomclientsectionsettings WITH (NOLOCK)
                        WHERE ClientID = @GroupID AND ClientTypeID = 0 AND RandomSectionID = @RandomSectionID;

                        IF @ClientSecurityXML IS NOT NULL
                            SET @FinalSecurityXML = @ClientSecurityXML;
                    END
                END

                FETCH NEXT FROM ClientCursor INTO @ClientID;
            END

            CLOSE ClientCursor;
            DEALLOCATE ClientCursor;
        END

        -- Insert into temporary table
        INSERT INTO #SecurityXMLResult (RandomSectionID, SecurityXML)
        VALUES (@RandomSectionID, @FinalSecurityXML);

        -- Move to next section
        SET @RandomSectionID = @RandomSectionID + 1;
    END

    -- Output results
    SELECT RandomSectionID, SecurityXML
    FROM #SecurityXMLResult
    ORDER BY RandomSectionID;

    -- Cleanup
    DROP TABLE #SecurityXMLResult;
    DROP TABLE #ClientIDs;
END;
GO
