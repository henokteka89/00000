 
AS
BEGIN
    SET NOCOUNT ON;

    -- Step 1: Retrieve Random Sections (IDs 1 to 10)
    SELECT RandomSectionID
    INTO #RandomSections
    FROM randomsection
    WHERE RandomSectionID BETWEEN 1 AND 10;

    -- Step 2: Retrieve ClientIDs associated with @DynamicClientID
    SELECT ClientID
    INTO #ClientIDs
    FROM fn_DCG_GetClientIDsForDynamicClientID(@DynamicClientID);

    -- Step 3: Initialize SecurityXML Table
    CREATE TABLE #SecurityXML (
        RandomSectionID INT PRIMARY KEY,
        SecurityXML VARCHAR(1000)
    );

    -- Step 4: Process User-Level SecurityXML
    INSERT INTO #SecurityXML (RandomSectionID, SecurityXML)
    SELECT
        rs.RandomSectionID,
        COALESCE(
            -- User-level SecurityXML
            (SELECT TOP 1 uss.SecurityXML
             FROM myescreenrandomusersectionsettings uss
             WHERE uss.UserID = @UserID AND uss.RandomSectionID = rs.RandomSectionID
             ORDER BY uss.accessflag DESC),
            -- Default to NULL if no user-level setting
            NULL
        ) AS SecurityXML
    FROM #RandomSections rs;

    -- Step 5: Process Client-Level SecurityXML with Grouping Logic
    DECLARE @CurrentClientID INT;
    DECLARE @SectionID INT;
    DECLARE @ClientTypeID INT;
    DECLARE @MasterID INT;
    DECLARE @GroupID INT;
    DECLARE @ClientSecurityXML VARCHAR(1000);

    DECLARE ClientCursor CURSOR LOCAL FAST_FORWARD FOR
    SELECT ClientID FROM #ClientIDs;

    OPEN ClientCursor;
    FETCH NEXT FROM ClientCursor INTO @CurrentClientID;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        -- Retrieve Client Hierarchy Details
        SELECT
            @ClientTypeID = CASE
                WHEN ca.ClientSubAccount <> 0 THEN 0 -- Client
                WHEN EXISTS (SELECT 1 FROM nationalaccountextras na WHERE na.GroupID = ca.ClientID) THEN 2 -- Group
                ELSE 1 -- Master
            END,
            @MasterID = (SELECT TOP 1 clientid FROM clientaccounts ca2 
                         WHERE ca2.ClientAccount = ca.ClientAccount AND ca2.ClientSubAccount = 0),
            @GroupID = (SELECT TOP 1 GroupID FROM nationalaccountextras na 
                        WHERE na.ClientID = @CurrentClientID)
        FROM clientaccounts ca
        WHERE ca.ClientID = @CurrentClientID;

        -- Process Each RandomSectionID
        DECLARE SectionCursor CURSOR LOCAL FAST_FORWARD FOR
        SELECT RandomSectionID FROM #RandomSections;

        OPEN SectionCursor;
        FETCH NEXT FROM SectionCursor INTO @SectionID;

        WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @ClientSecurityXML = NULL;

            -- Check SecurityXML for Group Level
            IF @ClientTypeID = 2
            BEGIN
                SELECT TOP 1 @ClientSecurityXML = SECURITYXML
                FROM myescreenrandomclientsectionsettings
                WHERE ClientID = @CurrentClientID AND ClientTypeID = 2 AND RandomSectionID = @SectionID;
            END

            -- Check SecurityXML for Master Level
            IF @ClientTypeID = 1 AND @ClientSecurityXML IS NULL
            BEGIN
                SELECT TOP 1 @ClientSecurityXML = SECURITYXML
                FROM myescreenrandomclientsectionsettings
                WHERE ClientID = @CurrentClientID AND ClientTypeID = 1 AND RandomSectionID = @SectionID;

                IF @ClientSecurityXML IS NULL AND @GroupID IS NOT NULL
                BEGIN
                    SELECT TOP 1 @ClientSecurityXML = SECURITYXML
                    FROM myescreenrandomclientsectionsettings
                    WHERE ClientID = @GroupID AND ClientTypeID = 1 AND RandomSectionID = @SectionID;
                END
            END

            -- Check SecurityXML for Client Level
            IF @ClientTypeID = 0 AND @ClientSecurityXML IS NULL
            BEGIN
                SELECT TOP 1 @ClientSecurityXML = SECURITYXML
                FROM myescreenrandomclientsectionsettings
                WHERE ClientID = @CurrentClientID AND ClientTypeID = 0 AND RandomSectionID = @SectionID;

                IF @ClientSecurityXML IS NULL AND @MasterID IS NOT NULL
                BEGIN
                    SELECT TOP 1 @ClientSecurityXML = SECURITYXML
                    FROM myescreenrandomclientsectionsettings
                    WHERE ClientID = @MasterID AND ClientTypeID = 0 AND RandomSectionID = @SectionID;
                END

                IF @ClientSecurityXML IS NULL AND @GroupID IS NOT NULL
                BEGIN
                    SELECT TOP 1 @ClientSecurityXML = SECURITYXML
                    FROM myescreenrandomclientsectionsettings
                    WHERE ClientID = @GroupID AND ClientTypeID = 0 AND RandomSectionID = @SectionID;
                END
            END

            -- Merge SecurityXML into the final table
            UPDATE #SecurityXML
            SET SecurityXML = COALESCE(SecurityXML, @ClientSecurityXML)
            WHERE RandomSectionID = @SectionID;

            FETCH NEXT FROM SectionCursor INTO @SectionID;
        END

        CLOSE SectionCursor;
        DEALLOCATE SectionCursor;

        FETCH NEXT FROM ClientCursor INTO @CurrentClientID;
    END

    CLOSE ClientCursor;
    DEALLOCATE ClientCursor;

    -- Step 6: Output Final SecurityXML
    SELECT
        rs.RandomSectionID,
        sx.SecurityXML
    FROM #RandomSections rs
    LEFT JOIN #SecurityXML sx ON rs.RandomSectionID = sx.RandomSectionID
    ORDER BY rs.RandomSectionID;

    -- Cleanup
    DROP TABLE #RandomSections;
    DROP TABLE #ClientIDs;
    DROP TABLE #SecurityXML;
END;
GO
