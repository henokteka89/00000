WITH ClientDetails AS (
    -- Step 1: Retrieve client hierarchy and their types
    SELECT 
        ca.ClientID,
        ca.ClientAccount,
        ca.ClientSubAccount,
        COALESCE(nae.GroupID, 0) AS GroupID,
        CASE
            WHEN ca.ClientSubAccount <> 0 THEN 0 -- Subclient
            WHEN EXISTS (SELECT 1 FROM nationalaccountextras WHERE GroupID = ca.ClientID) THEN 2 -- Group
            ELSE 1 -- Master
        END AS ClientTypeID,
        COALESCE(m.ClientID, 0) AS MasterID
    FROM clientaccounts ca
    LEFT JOIN nationalaccountextras nae ON nae.ClientID = ca.ClientID
    LEFT JOIN clientaccounts m ON m.ClientAccount = ca.ClientAccount AND m.ClientSubAccount = 0
    WHERE ca.ClientID IN (SELECT ClientID FROM fn_DCG_GetClientIDsForDynamicClientID(@DynamicClientID))
),
UserSettings AS (
    -- Step 2: User-level settings for all sections
    SELECT
        rs.RandomSectionID,
        us.UserID,
        MAX(CASE WHEN us.AccessFlag = 0 THEN 0 WHEN us.AccessFlag = 1 THEN 1 ELSE NULL END) AS UserAccess,
        MAX(us.SecurityXML) AS UserSecurityXML
    FROM randomsection rs
    LEFT JOIN myescreenrandomusersectionsettings us ON rs.RandomSectionID = us.RandomSectionID AND us.UserID = @UserID
    WHERE rs.RandomSectionID BETWEEN 1 AND 10
    GROUP BY rs.RandomSectionID, us.UserID
),
ClientSettings AS (
    -- Step 3: Client-level settings for all sections across hierarchy levels
    SELECT 
        hl.ClientID,
        hl.RandomSectionID,
        MAX(cs.SecurityXML) AS ClientSecurityXML,
        MAX(CASE WHEN cs.AccessFlag = 0 THEN 0 ELSE 1 END) AS ClientAccess -- Denied if any 0, else Granted
    FROM (
        SELECT 
            cd.ClientID,
            cd.ClientID AS ClientIDToCheck,
            cd.ClientTypeID,
            rs.RandomSectionID
        FROM ClientDetails cd
        CROSS JOIN (SELECT RandomSectionID FROM randomsection WHERE RandomSectionID BETWEEN 1 AND 10) rs

        UNION ALL

        SELECT 
            cd.ClientID,
            cd.MasterID AS ClientIDToCheck,
            cd.ClientTypeID,
            rs.RandomSectionID
        FROM ClientDetails cd
        CROSS JOIN (SELECT RandomSectionID FROM randomsection WHERE RandomSectionID BETWEEN 1 AND 10) rs
        WHERE cd.MasterID IS NOT NULL

        UNION ALL

        SELECT 
            cd.ClientID,
            cd.GroupID AS ClientIDToCheck,
            cd.ClientTypeID,
            rs.RandomSectionID
        FROM ClientDetails cd
        CROSS JOIN (SELECT RandomSectionID FROM randomsection WHERE RandomSectionID BETWEEN 1 AND 10) rs
        WHERE cd.GroupID IS NOT NULL
    ) hl
    LEFT JOIN myescreenrandomclientsectionsettings cs
        ON hl.ClientIDToCheck = cs.ClientID
        AND hl.ClientTypeID = cs.ClientTypeID
        AND hl.RandomSectionID = cs.RandomSectionID
    GROUP BY hl.ClientID, hl.RandomSectionID
),
FinalSecurityXML AS (
    -- Step 4: Combine user and client settings
    SELECT
        rs.RandomSectionID,
        COALESCE(us.UserSecurityXML, cs.ClientSecurityXML) AS FinalSecurityXML,
        CASE
            WHEN us.UserAccess = 0 THEN 0 -- User Denied
            WHEN cs.ClientAccess = 1 AND us.UserAccess = 1 THEN 1 -- Both Granted
            ELSE 0 -- Default Denied
        END AS FinalAccess
    FROM randomsection rs
    LEFT JOIN UserSettings us ON rs.RandomSectionID = us.RandomSectionID
    LEFT JOIN ClientSettings cs ON rs.RandomSectionID = cs.RandomSectionID
    WHERE rs.RandomSectionID BETWEEN 1 AND 10
)
-- Final Output
SELECT 
    rs.RandomSectionID,
    rs.MenuText,
    rs.MenuActionV2,
    rs.Description,
    fs.FinalSecurityXML,
    fs.FinalAccess
FROM randomsection rs
LEFT JOIN FinalSecurityXML fs ON rs.RandomSectionID = fs.RandomSectionID
WHERE rs.RandomSectionID BETWEEN 1 AND 10
ORDER BY rs.RandomSectionID;
