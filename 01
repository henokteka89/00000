WITH RandomSections AS (
    SELECT RandomSectionID
    FROM randomsection
    WHERE RandomSectionID BETWEEN 1 AND 10
),
ClientIDs AS (
    SELECT ClientID
    FROM fn_DCG_GetClientIDsForDynamicClientID(@DynamicClientID)
),
ClientHierarchy AS (
    SELECT 
        ca.ClientID,
        ca.ClientAccount,
        ca.ClientSubAccount,
        CASE 
            WHEN ca.ClientSubAccount <> 0 THEN 0 -- Subclient
            WHEN EXISTS (SELECT 1 FROM nationalaccountextras WHERE groupid = ca.ClientID) THEN 2 -- Group
            ELSE 1 -- Master
        END AS ClientTypeID,
        COALESCE(na.GroupID, 0) AS GroupID,
        COALESCE(m.ClientID, 0) AS MasterID
    FROM clientaccounts ca
    INNER JOIN ClientIDs c ON ca.ClientID = c.ClientID -- Process only relevant ClientIDs
    LEFT JOIN nationalaccountextras na ON na.ClientID = ca.ClientID
    LEFT JOIN clientaccounts m ON ca.ClientAccount = m.ClientAccount AND m.ClientSubAccount = 0
)
SELECT
    rs.RandomSectionID,
    COALESCE(
        -- User-Level SecurityXML
        (SELECT TOP 1 uss.SecurityXML 
         FROM myescreenrandomusersectionsettings uss
         WHERE uss.UserID = @UserID 
           AND uss.RandomSectionID = rs.RandomSectionID
           AND uss.accessflag = 1
         ORDER BY uss.accessflag DESC),
        -- Client-Level SecurityXML (Hierarchy: Client > Master > Group)
        (SELECT TOP 1 css.SECURITYXML
         FROM myescreenrandomclientsectionsettings css
         WHERE css.RandomSectionID = rs.RandomSectionID
           AND (
               (css.ClientID = ch.ClientID AND css.ClientTypeID = 0) OR -- Client
               (css.ClientID = ch.MasterID AND css.ClientTypeID = 0) OR -- Master
               (css.ClientID = ch.GroupID AND css.ClientTypeID = 2)    -- Group
           )
         ORDER BY css.ClientTypeID ASC)
    ) AS FinalSecurityXML
FROM RandomSections rs
CROSS APPLY ClientHierarchy ch
ORDER BY rs.RandomSectionID;
